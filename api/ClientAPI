-- Client API

os.loadAPI("api/Util")

-- Local variables
local CONFIG_TEMPLATE = [[--
-- Remote Control Program by lpenap
-- https://github.com/lpenap/computercraft-redstone-control
-- luisau.mc@gmail.com

-- Tip: If you think the configuration file is
-- broken, You can delete it safely and the
-- program will generate a new file again.


-- Client Configuration:

-- Interval for reporting to server program
-- (in seconds)
KEEP_ALIVE = ${keepAlive}

-- Name of this client Instance
CLIENT_NAME = "${clientName}"

-- Initial state of redstone signal
-- 1 for ON, or 0 for OFF
REDSTONE_STATE = ${redstoneState}

-- Side for redstone signal
REDSTONE_SIDE = "${redstoneSide}"
]]

-- Class that implements all client functions
ClientClass = {
	keepAlive = 60,
	name = "Generic Client",
	redstoneState = 1,
	redstoneSide = "front"
}

function ClientClass:new (o)
	o = o or {}
	setmetatable(o, self)
	self.__index = self
	return o
end

function ClientClass:setKeepAlive(secs)
	self.keepAlive = secs
end

function ClientClass:getKeepAlive()
	return self.keepAlive
end

function ClientClass:getName()
	return self.name
end

function ClientClass:getRedstoneState()
	return self.redstoneState
end

function ClientClass:getRedstoneSide()
	return self.redstoneSide
end

function ClientClass:saveConfig(configFile)
	local fp = fs.open ("/"..configFile, "w")
	local settings = {
		keepAlive = self.keepAlive,
		clientName = self.name,
		redstoneState = self.redstoneState,
		redstoneSide = self.redstoneSide
	}
	fp.write (Util.interpolate(CONFIG_TEMPLATE, settings))
	fp.close()
end

function ClientClass:loadConfig(configFile)
	local result = true
	local errorCode = 0
	if fs.exists (configFile) == false then
		self:saveConfig (configFile)
		errorCode = 1
		result = false
	else
		os.unloadAPI (configFile)
		if os.loadAPI (configFile) == false then
			errorCode = 2
			result = false
		else
			local config = nil
			for k, v in pairs(_G) do
				if k == configFile then
					config = v
					break
				end
			end
			if config == nil then
				errorCode = 3
    			result = false
    		else
    			self.keepAlive = config.KEEP_ALIVE
    			self.name = config.CLIENT_NAME
    			self.redstoneState = config.REDSTONE_STATE
    			self.redstoneSide = config.REDSTONE_SIDE
    		end
    	end
    end
    return result, errorCode
end


